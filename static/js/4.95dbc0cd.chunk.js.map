{"version":3,"sources":["utils/enums.ts","utils/constant.ts","components/Common/FormFields/InputField.tsx","components/Register/CountrySelectDialog.tsx","components/Common/FormFields/InputMaskedField.tsx","components/Register/PhoneNumber.tsx","components/Register/Form.tsx","components/Register/ReceivedApplication.tsx","components/Common/Header.tsx","components/Register/index.tsx","pages/Register/index.tsx"],"names":["COUNTRY","COUNTRIES","name","USA","label","AUS","COUNTRIES_MASK","COLORS","useStyles","makeStyles","theme","textField","props","height","backgroundColor","border","error","boxSizing","borderRadius","borderBottom","marginLeft","memo","capitilizeFirst","classes","TextField","onChange","e","value","target","charAt","toUpperCase","slice","fullWidth","id","variant","color","className","helperText","message","dialogHeader","padding","fontWeight","fontStyle","fontSize","dialogList","paddingTop","paddingBottom","minWidth","paddingLeft","paddingRight","width","CountrySelectDialog","onClose","selectedValue","open","Dialog","aria-labelledby","DialogTitle","List","map","country","ListItem","button","onClick","key","ListItemAvatar","Avatar","src","alt","ListItemText","primary","TextMaskCustom","inputRef","pattern","other","ref","inputElement","mask","placeholderChar","FormControl","InputLabel","htmlFor","FilledInput","inputProps","inputComponent","iconTextField","icon","cursor","PhoneNumber","form","setValue","watch","control","formState","errors","React","useState","setOpen","Grid","container","alignItems","item","Icon","component","defaultValue","render","field","FormHelperText","schema","yup","shape","firstName","required","lastName","phoneNumber","when","is","then","matches","otherwise","email","password","halfWidth","fullwidth","opacity","boxShadow","header","margin","headerContainer","position","top","transform","headerIcon","backdrop","zIndex","drawer","Form","setFormData","loading","setLoading","useForm","mode","defaultValues","resolver","yupResolver","handleSubmit","direction","spacing","type","Button","disabled","isValid","data","setTimeout","Backdrop","CircularProgress","thickness","size","notificationIcon","notificationText","lineHeight","notificationParagraph","ReceivedApplication","formData","Typography","Box","Header","createMuiTheme","typography","fontFamily","join","palette","main","action","disabledBackground","disabledOpacity","root","flexWrap","isFormData","Register","ThemeProvider","Container","maxWidth","RegisterRoutes","url","match","path","exact","to"],"mappings":"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","file":"static/js/4.95dbc0cd.chunk.js","sourcesContent":["export enum COUNTRY {\n  USA = 'usa',\n  AUS = 'aus'\n}\n","import { COUNTRY } from './enums';\n\nexport const COUNTRIES = [\n  {\n    name: COUNTRY.USA,\n    label: '+1 - United States'\n  },\n  {\n    name: COUNTRY.AUS,\n    label: '+61 - Australia'\n  }\n];\n\nexport const COUNTRIES_MASK = {\n  [COUNTRY.USA]: ['(', /[1-9]/, /\\d/, /\\d/, ')', ' ', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/],\n  [COUNTRY.AUS]: [/[1-9]/, /\\d/, /\\d/, /\\d/, ' ', /\\d/, /\\d/, /\\d/, ' ', /\\d/, /\\d/, /\\d/]\n};\n\nexport const COLORS = {\n  GREEN: '#02E0B1',\n  RED: '#F44336',\n  GREY: '#DFDFDF'\n};\n","import React, { memo, FC } from 'react';\nimport { FieldError, FieldValues } from 'react-hook-form';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport { COLORS } from 'utils/constant';\n\ninterface IInputFieldProps extends FieldValues {\n  label?: string;\n  type?: string;\n  error?: FieldError;\n  capitilizeFirst?: boolean;\n}\n\nconst useStyles = makeStyles(theme => ({\n  textField: (props: { error: boolean }) => ({\n    '& .MuiFilledInput-root': {\n      height: '58px',\n      backgroundColor: 'inherit',\n      border: `1px solid ${props.error ? COLORS.RED : COLORS.GREY}`,\n      boxSizing: 'border-box',\n      borderRadius: '2px'\n    },\n    '& .MuiFilledInput-underline:after, .MuiFilledInput-underline:before': {\n      borderBottom: 'none'\n    },\n    '& .MuiFormHelperText-contained': {\n      marginLeft: '0px'\n    }\n  })\n}));\n\nconst InputField: FC<IInputFieldProps> = ({ error, label, capitilizeFirst, ...props }) => {\n  const classes = useStyles({ error: !!error });\n\n  const capitilizeFirstHandle = e => {\n    const value = e.target.value.charAt(0).toUpperCase() + e.target.value.slice(1);\n    props.onChange(value);\n  };\n  return (\n    <TextField\n      {...props}\n      onChange={capitilizeFirst ? capitilizeFirstHandle : props.onChange}\n      fullWidth\n      id={`filled-primary-${props.name}`}\n      label={label}\n      variant='filled'\n      color='primary'\n      className={classes.textField}\n      error={!!error}\n      helperText={error?.message}\n    />\n  );\n};\n\nexport default memo(InputField);\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport Avatar from '@material-ui/core/Avatar';\nimport { COUNTRIES } from 'utils/constant';\n\nconst useStyles = makeStyles(() => ({\n  dialogHeader: {\n    padding: '16px 24px 0px 24px',\n    '& .MuiDialogTitle-root': {},\n    '& .MuiTypography-root': {\n      fontWeight: 'normal',\n      fontStyle: 'normal',\n      fontSize: '22px',\n      color: 'rgba(0, 0, 0, 0.87)'\n    }\n  },\n  dialogList: {\n    '& .MuiButtonBase-root': {\n      paddingTop: '0px',\n      paddingBottom: '0px'\n    },\n    '& .MuiListItemAvatar-root': {\n      minWidth: '55px'\n    },\n    '& .MuiAvatar-colorDefault': {\n      backgroundColor: 'inherit'\n    },\n    '& .MuiListItem-gutters': {\n      paddingLeft: '24px',\n      paddingRight: '26px'\n    },\n    '& img': {\n      width: '24px',\n      height: '16px'\n    }\n  }\n}));\n\nfunction CountrySelectDialog(props) {\n  const classes = useStyles({});\n  const { onClose, selectedValue, open } = props;\n\n  const handleClose = () => {\n    onClose(selectedValue);\n  };\n\n  const handleListItemClick = value => {\n    onClose(value);\n  };\n\n  return (\n    <Dialog onClose={handleClose} aria-labelledby='simple-dialog-title' open={open}>\n      <DialogTitle className={classes.dialogHeader} id='simple-dialog-title'>\n        Select country\n      </DialogTitle>\n      <List className={classes.dialogList}>\n        {COUNTRIES.map(country => (\n          <ListItem button onClick={() => handleListItemClick(country.name)} key={country.name}>\n            <ListItemAvatar>\n              <Avatar>\n                <img src={`/svgs/${country.name}_flag.svg`} alt='icon' />\n              </Avatar>\n            </ListItemAvatar>\n            <ListItemText primary={country.label} />\n          </ListItem>\n        ))}\n      </List>\n    </Dialog>\n  );\n}\n\nexport default CountrySelectDialog;\n","import React, { memo, FC } from 'react';\nimport { FieldError, FieldValues } from 'react-hook-form';\nimport { makeStyles } from '@material-ui/core/styles';\nimport FormControl from '@material-ui/core/FormControl';\nimport FilledInput from '@material-ui/core/FilledInput';\nimport InputLabel from '@material-ui/core/InputLabel';\n\nimport MaskedInput from 'react-text-mask';\nimport { COLORS } from 'utils/constant';\n\ninterface InputMaskedFieldProps extends FieldValues {\n  label?: string;\n  type?: string;\n  error?: FieldError;\n  capitilizeFirst?: boolean;\n  pattern: string[];\n}\n\nconst useStyles = makeStyles(theme => ({\n  textField: (props: any) => ({\n    '& .MuiFilledInput-root': {\n      height: '58px',\n      backgroundColor: 'inherit',\n      border: `1px solid ${props.error ? COLORS.RED : COLORS.GREY}`,\n      boxSizing: 'border-box',\n      borderRadius: '2px'\n    },\n    '& .MuiFilledInput-underline:after, .MuiFilledInput-underline:before': {\n      borderBottom: 'none'\n    },\n    '& .MuiFormHelperText-contained': {\n      marginLeft: '0px'\n    }\n  })\n}));\n\nfunction TextMaskCustom(props) {\n  const { inputRef, pattern, ...other } = props;\n\n  return (\n    <MaskedInput\n      {...other}\n      ref={ref => {\n        inputRef(ref ? ref.inputElement : null);\n      }}\n      mask={pattern}\n      placeholderChar={'\\u2000'}\n    />\n  );\n}\n\nconst InputMaskedField: FC<InputMaskedFieldProps> = ({ error, label, capitilizeFirst, mask, ...props }) => {\n  const classes = useStyles({ error: !!error });\n  return (\n    <>\n      <FormControl className={classes.textField} variant='filled' error={!!error}>\n        <InputLabel variant='filled' htmlFor='formatted-text-mask-input'>\n          {label}\n        </InputLabel>\n        <FilledInput {...props} inputProps={props} id='formatted-text-mask-input' inputComponent={TextMaskCustom} />\n      </FormControl>\n    </>\n  );\n};\n\nexport default memo(InputMaskedField);\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Icon from '@material-ui/core/Icon';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport CountrySelectDialog from 'components/Register/CountrySelectDialog';\n\nimport { Controller } from 'react-hook-form';\nimport InputMaskedField from 'components/Common/FormFields/InputMaskedField';\n\nimport { COUNTRIES_MASK } from 'utils/constant';\n\nconst useStyles = makeStyles(() => ({\n  iconTextField: (props: any) => ({\n    border: `1px solid ${props.error ? '#F44336' : '#DFDFDF'}`,\n\n    '& .MuiFilledInput-root': {\n      height: '58px',\n      backgroundColor: 'inherit',\n      border: 'none',\n      boxSizing: 'border-box',\n      borderRadius: '2px'\n    },\n    '& .MuiFilledInput-underline:after, .MuiFilledInput-underline:before': {\n      borderBottom: 'none'\n    },\n    '& .MuiFormHelperText-contained': {\n      marginLeft: '0px'\n    }\n  }),\n  icon: {\n    cursor: 'pointer',\n    padding: '21px 0px 0px 20px',\n    width: '24px',\n    height: '16px'\n  }\n}));\n\nfunction PhoneNumber({ form }) {\n  const { setValue, watch, control, formState } = form;\n\n  const classes = useStyles({ error: !!formState.errors['phoneNumber'] });\n  const country = watch('country');\n\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = value => {\n    setOpen(false);\n    setValue('country', value);\n  };\n\n  return (\n    <>\n      <Grid container alignItems='flex-end' className={classes.iconTextField}>\n        <Grid item>\n          <Icon component='span' onClick={handleClickOpen}>\n            <img src={`/svgs/${country}_flag.svg`} alt='icon' className={classes.icon} />\n          </Icon>\n          <Controller\n            defaultValue=''\n            name='phoneNumber'\n            control={control}\n            render={({ field }) => (\n              <InputMaskedField\n                {...field}\n                label='Phone number'\n                pattern={COUNTRIES_MASK[country]}\n                error={formState.errors['phoneNumber']}\n              />\n            )}\n          />\n        </Grid>\n      </Grid>\n      <FormHelperText error id={'Phone number'}>\n        {formState.errors['phoneNumber']?.message}\n      </FormHelperText>\n      <CountrySelectDialog country={country} open={open} onClose={handleClose} />\n    </>\n  );\n}\n\nexport default PhoneNumber;\n","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { useForm, Controller } from 'react-hook-form';\nimport InputField from 'components/Common/FormFields/InputField';\nimport PhoneNumber from 'components/Register/PhoneNumber';\n\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as yup from 'yup';\nimport { COUNTRY } from 'utils/enums';\n\nconst schema = yup.object().shape({\n  firstName: yup.string().required('Please enter your First name'),\n  lastName: yup.string().required('Please enter your Last name'),\n  phoneNumber: yup\n    .string()\n    .required('Please enter your Phone')\n    .when('country', {\n      is: country => country === COUNTRY.USA,\n      then: yup.string().matches(/^\\([0-9]{3}\\) [0-9]{3}-[0-9]{4}$/, 'Invalid Usa format'),\n      otherwise: yup.string().matches(/^[0-9]{4} [0-9]{3} [0-9]{3}$/, 'Invalid Aus format')\n    }),\n  email: yup\n    .string()\n    .required('Please enter your Email')\n    .email('Invalid email address')\n    .matches(/^[a-z]+[A-Za-z\\d.@$!%*#?&]*$/, 'Must start with a lowercase letter'),\n\n  password: yup\n    .string()\n    .required('Please Enter your password')\n    .matches(\n      /^(?=.*[A-Z])(?=.*[a-z])(?=.*\\d)[A-Za-z\\d@$!%*#?&]{8,}$/,\n      'Oops! You need a password longer than 8 characters with numbers and letters.'\n    )\n});\n\nconst useStyles = makeStyles(theme => ({\n  halfWidth: {\n    width: '50%'\n  },\n  fullwidth: {\n    width: '100%'\n  },\n  button: {\n    width: '100%',\n    height: '60px',\n    '& .MuiButton-label': {\n      color: '#FFFFFF',\n      opacity: 0.9,\n      fontWeight: 500,\n      fontSize: '14px'\n    },\n\n    boxShadow: '0px 4px 4px rgba(0, 0, 0, 0.03)',\n    borderRadius: '2px'\n  },\n  icon: {\n    cursor: 'pointer',\n    padding: '21px 0px 0px 20px',\n    width: '24px',\n    height: '16px'\n  },\n  header: {\n    width: '414px',\n    height: '78px',\n    margin: 0\n  },\n  headerContainer: {\n    margin: 0,\n    position: 'relative',\n    top: '25%',\n    '-ms-transform': 'translateY(-50%)',\n    transform: 'translateY(-50%)'\n  },\n  headerIcon: {\n    cursor: 'pointer',\n    height: '30px'\n  },\n\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    backgroundColor: 'rgba(255, 255, 255, 0.9)'\n  }\n}));\n\nfunction Form({ setFormData }) {\n  const classes = useStyles({ error: false });\n  const [loading, setLoading] = useState<boolean>(false);\n\n  const form = useForm({\n    mode: 'onBlur',\n    defaultValues: {\n      firstName: 'Ahmad',\n      lastName: 'Faraz',\n      email: 'ahmadfaraz629@gmail.com',\n      password: 'aaaaaaA1',\n      country: 'usa',\n      phoneNumber: '03218447889'\n    },\n    resolver: yupResolver(schema)\n  });\n\n  const { control, formState, handleSubmit } = form;\n\n  const onSubmit = data => {\n    setLoading(true);\n\n    setTimeout(() => {\n      setLoading(false);\n      setFormData(data);\n    }, 2000);\n  };\n\n  return (\n    <Grid container direction='row' spacing={2}>\n      <Grid item className={classes.halfWidth}>\n        <Controller\n          defaultValue=''\n          name='firstName'\n          control={control}\n          render={({ field }) => (\n            <InputField {...field} label='First name' error={formState.errors['firstName']} capitilizeFirst />\n          )}\n        />\n      </Grid>\n\n      <Grid item className={classes.halfWidth}>\n        <Controller\n          defaultValue=''\n          name='lastName'\n          control={control}\n          render={({ field }) => <InputField {...field} label='Last name' error={formState.errors['lastName']} capitilizeFirst />}\n        />\n      </Grid>\n      <Grid item className={classes.fullwidth}>\n        <PhoneNumber form={form} />\n      </Grid>\n      <Grid item className={classes.fullwidth}>\n        <Controller\n          defaultValue=''\n          name='email'\n          control={control}\n          render={({ field }) => <InputField {...field} label='Email' error={formState.errors['email']} />}\n        />\n      </Grid>\n\n      <Grid item className={classes.fullwidth}>\n        <Controller\n          defaultValue=''\n          name='password'\n          control={control}\n          render={({ field }) => <InputField {...field} type='password' label='Password' error={formState.errors['password']} />}\n        />\n      </Grid>\n\n      <Grid item className={classes.fullwidth}>\n        <Button\n          variant='contained'\n          type='submit'\n          disabled={!formState.isValid}\n          color='primary'\n          onClick={handleSubmit(onSubmit)}\n          className={classes.button}\n        >\n          NEXT\n        </Button>\n      </Grid>\n\n      <Backdrop className={classes.backdrop} open={loading}>\n        <CircularProgress color='primary' thickness={3.6} size={54} />\n      </Backdrop>\n    </Grid>\n  );\n}\n\nexport default Form;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Icon from '@material-ui/core/Icon';\nimport Box from '@material-ui/core/Box';\n\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles(theme => ({\n  notificationIcon: {\n    width: '71px',\n    height: '53.99px'\n  },\n  notificationText: {\n    fontSize: '22px',\n    lineHeight: '29px',\n    color: '#000000',\n    fontStyle: 'normal',\n    fontWeight: 'normal'\n  },\n  notificationParagraph: {\n    fontSize: '15px',\n    lineHeight: '21px',\n    color: 'rgba(0, 0, 0, 0.54)',\n    fontStyle: 'normal',\n    fontWeight: 'normal'\n  }\n}));\n\nfunction ReceivedApplication({ formData }) {\n  const classes = useStyles();\n\n  return (\n    <>\n      <Grid container spacing={3}>\n        <Grid item>\n          <Icon component='span'>\n            <img src={`/svgs/notification.svg`} alt='icon' className={classes.notificationIcon} />\n          </Icon>\n        </Grid>\n        <Grid item>\n          <Grid container direction='column'>\n            <Grid item>\n              <Typography variant='inherit' component='span' className={classes.notificationText}>\n                Thanks, {formData.firstName}!{' '}\n              </Typography>\n            </Grid>\n            <Grid item>\n              <Typography variant='inherit' component='span' className={classes.notificationText}>\n                We’ve received your application\n              </Typography>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n\n      <Box paddingTop='27px'>\n        <Typography variant='inherit' component='span' className={classes.notificationParagraph}>\n          We’ll process your application as soon as possible and send you a decision within 30 days to {formData.phoneNumber} or{' '}\n          {formData.email}. We will contact you in case more information is needed.\n        </Typography>\n      </Box>\n\n      <Box paddingTop='21px'>\n        <Typography variant='inherit' component='span' className={classes.notificationParagraph}>\n          While we’re reviewing your application, please don’t submit another application for the uPet’s breeder program.\n        </Typography>\n      </Box>\n    </>\n  );\n}\n\nexport default ReceivedApplication;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Icon from '@material-ui/core/Icon';\nimport Box from '@material-ui/core/Box';\n\nconst useStyles = makeStyles(theme => ({\n  header: {\n    height: '78px',\n    margin: 0\n  },\n  headerContainer: {\n    margin: 0,\n    position: 'relative',\n    top: '25%',\n    '-ms-transform': 'translateY(-50%)',\n    transform: 'translateY(-50%)'\n  },\n  headerIcon: {\n    cursor: 'pointer',\n    height: '30px'\n  }\n}));\n\nfunction Header() {\n  const classes = useStyles();\n\n  return (\n    <Box className={classes.header}>\n      <Icon component='span' className={classes.headerContainer}>\n        <img src='/svgs/upet_logo.svg' alt='icon' className={classes.headerIcon} />\n      </Icon>\n    </Box>\n  );\n}\n\nexport default Header;\n","import React from 'react';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/styles';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Form from 'components/Register/Form';\nimport ReceivedApplication from 'components/Register/ReceivedApplication';\n\nimport Header from 'components/Common/Header';\nimport { COLORS } from 'utils/constant';\n\nconst theme = createMuiTheme({\n  typography: {\n    fontFamily: ['Rawline'].join(',')\n  },\n  palette: {\n    primary: {\n      main: COLORS.GREEN\n    },\n    action: {\n      disabledBackground: COLORS.GREEN,\n      disabledOpacity: 0.6\n    }\n  }\n});\n\nconst useStyles = makeStyles(() => ({\n  root: (props: { isFormData: boolean }) => ({\n    '& .MuiGrid-container': {\n      flexWrap: props.isFormData ? 'nowrap' : 'wrap'\n    },\n    '& .MuiButton-contained.Mui-disabled': {\n      opacity: 0.6\n    }\n  })\n}));\n\nfunction Register() {\n  const [formData, setFormData] = React.useState(null);\n  const classes = useStyles({ isFormData: !!formData });\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Container maxWidth='sm' className={classes.root}>\n        <Header />\n        {formData ? <ReceivedApplication formData={formData} /> : <Form setFormData={setFormData} />}\n      </Container>\n    </ThemeProvider>\n  );\n}\n\nexport default Register;\n","import React from 'react';\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport Register from 'components/Register'\n\nconst RegisterRoutes = ({ match: { url } }) => (\n  <Switch>\n    <Route path={`${url}`} exact component={Register} />\n    <Redirect to={`${url}`} />\n  </Switch>\n);\n\nexport default RegisterRoutes;\n"],"sourceRoot":""}